SysML Models Animation (using {toolname} tool)
==============================================
:Author: Jean-Michel Bruel 
:Email: bruel@iut-blagnac.fr
:Revision: 1.1 - 15/02/2012
:Date: February 2012
//:images: RadioClock/images
:images: images
:toc_title: Content
:incremental:
:slideshowlocation: [UAG]
:copyright: {date={localdate}}, {slideshowlocation} *** {author} *** 
// raccourcis sites
:moodle: http://webetud.iut-blagnac.fr[Moodle]
//ifdef::rhapsody[]
:tool: http://www-01.ibm.com/software/rational/products/rhapsody/developer/[Rhapsody]
:toolname: Rhapsody
:toolversion: 7.6
//endif::rhapsody[]
:pr: http://www.prfc.com/[Pascal Roques]

In this practical work, we are going to experiment the {tool} tool, by implementing 
a simple example of a Stack data structure.
This tutorial was originally presented at "Universidad Autonoma de Guadalajara"
(http://www.uag.mx/[UAG]) for the undergraduated students in engineering.

== Tools

Verify that you have the corresponding tool on your machine: {tool} {toolversion} 

=== Let's start
- Open a new project (select the SysML kind)
- Add some organisation (packages) if needed (right-click->add->) 

image:{images}/{toolname}/under-organisation.png["organization",height="300",link="{images}/{toolname}/under-organisation.png"]

[NOTE] 
====
- An initial (Block Definition) Diagram is automatically generated and ready for you to start describing your system. If it is another diagram, add a new Block Definition Diagram by right-clicking in your project in the "Model view" (left part) and Add New -> Diagrams -> Block Definition Diagram.
- Click on the images of this tutorial to enlarge them
====


=== Block Definition Diagram

Start with a description of the system in its environment (most of the time called "context"):

- name your bdd into "Context"
- using the panel on the right, select a block and place one in the diagram
- notice the presence of the block you just defined in the model elements (Default Package)

image:{images}/{toolname}/under-context.png["UC1",height="300",link="{images}/{toolname}/under-context.png"]

- add the details of the stack (size, sizeMax)
- try different methods:
	* right-click on your block in the diagram and "Add New" -> "Attribute"
	* right-click on yout block in the model view and do the same. What do you notice?
	* play with the display property of your block in the diagram to show the last attribute.

[WARNING] 
====
There is two different "delete" in modeling tools: one delete from the diagram, the other from the model (all its occurences). Pay attention when deleting things. And as always save regularly. Tolls crash (especially on Windows ;-)
====

=== State Machine Diagram

We are now going to define the behavior of our Stack through a state machine.

- Right-click on the block and add an new statechart
- Add 3 states (Empty, Full, Regular), as well as the entry (pseudo-)state
- Add transitions between them (according to push/pull events and according to the value of size and of sizeMax). If you really can't find the state machine, here's an 
file:{images}/{toolname}/under-stm.png[answer].

In order to animate the model (see below), we need to provide precise default values and results of the events in the state machine (size++ when a push occurs for example).
Make sure you provide those information.

=== Preparing the animation of your model

We are provide the model elements used to show the results of the animation of
the state machine.

- Create a Panel Diagram (Right-click on your Project and Add->Diagrams->PanelDiagram).
- Find the corresponding diagram in the viewer and open it
- Using the panel on the right, place one "Level Indicator" and 3 "leds"
- Bind them to the corrsponding models elements:
	* bind the level indicator to the stack's size
	* define the max value and the number of division in the "settings" folder
	* do the same for the three leds (for the 3 states, play with colors)

image:{images}/{toolname}/under-panel1.png["Panel1",height="300",link="{images}/{toolname}/under-panel1.png"]
image:{images}/{toolname}/under-panel2.png["Panel2",height="300",link="{images}/{toolname}/under-panel2.png"]

- Create a new Package "Test", and add a new component (Add New -> UML -> Component)
- Setup the C++ language and choose your Stack as the "scope" of the component.
- Setup the configuration of the component by choosing the Stack as initialized instance.

image:{images}/{toolname}/under-scope.png["scope",height="300",link="{images}/{toolname}/under-scope.png"]

image:{images}/{toolname}/under-simu.png["Simulation config",height="300",link="{images}/{toolname}/under-simu.png"]

- If you have time only,  create also a sequence diagram in your Test package with your Stack as a lifeline. This step is not mandatory.

image:{images}/{toolname}/under-seq.png["Seq. diag",height="300",link="{images}/{toolname}/under-seq.png"]

=== Animation of the model

Everything is ready now for animation.

- Go to the "setting" part of your simulation configuration and make sure the Instrumentation mode is in "Animation".

image:{images}/{toolname}/under-animator.png["config animation",height="300",link="{images}/{toolname}/under-animator.png"]

- "Build" (construct all the code generation) by clicking on the Generate/Make/Run Button.image:{images}/{toolname}/under-make.png["Build",height="30",link="{images}/{toolname}/under-make.png"]
- If it is not opened, open the Animation panel.image:{images}/{toolname}/under-animPanel.png["Panel",height="30",link="{images}/{toolname}/under-animPanel.png"]
- Click on "Go Iddle" to initiate the animation. See the corresponding State Machine, Panel Diagram and Sequence diagram initialisations!

image:{images}/{toolname}/under-anim1.png["Idle",height="300",link="{images}/{toolname}/under-anim1.png"]

- Click on "Go". the animation is now waiting for an event to occur.
- Click on the "Event Generator" and produce a push for example.

image:{images}/{toolname}/under-push.png["Push",height="300",link="{images}/{toolname}/under-anim2.png"]

- See your Stack growing as much as you push.

image:{images}/{toolname}/under-anim2.png["Almost Full",height="300",link="{images}/{toolname}/under-anim2.png"]

- Until it reaches the "Full" state.

image:{images}/{toolname}/under-anim3.png["Full",height="300",link="{images}/{toolname}/under-anim3.png"]

=== Other SysML diagrams

Play around with the other SysML diagrams.

=== Report on your project

You can generate the documentation associated to your project (as a "souvenir" ;-):

- Click on Tools -> ReporterPLUS -> Report on all models elements,
- Select "Generate Micro$oft Word Document",
- Select "SysMLreport.tpl" as a report (for example),
- Choose a name (and a place) for your report.

[NOTE]
====
- You can modify the documentation template
- You can generate also Powerpoint presentations instead!
====

== Tips and tricks

[IMPORTANT]
====
*save regularly*:: watch out the Murphy's law
*check regularly*:: use the power of tools
====

== Links

- A set of slides (in French) of the RadioClock case study from {pr} is 
available http://goo.gl/GVhhX[here].
- A video of an animation is also available http://dl.dropbox.com/u/946731/PRFC_RhapsodySimulation_1.0_Demo.mp4[here] in case you could not make it.

== About...

Document generated with http://www.methods.co.nz/asciidoc/[AsciiDoc] by mailto:{email}[{author}]. 
image:http://i.creativecommons.org/l/by-sa/3.0/88x31.png["Licence Creative Commons",style="border-width:0",link="http://creativecommons.org/licenses/by-sa/3.0/"]
http://creativecommons.org/licenses/by-sa/3.0/[licence Creative Commons Paternité - Partage à l&#39;Identique 3.0 non transposé].
